#include<AnalogKeyPad.h>
int X=0
int PX[8]
int PY[8]
int f=-1
int fail=0
int a=0
int F[14]={660, 660, 524, 660, 784, 392, 524, 392, 328, 440, 492, 466, 440, 392}
d=0
e=0
p=0

void RobotUp()
{
 MatrixClear()
 MatrixDrawPixel(p+2, 0, LED_RED)
 MatrixDrawPixel(p+3, 0, LED_RED)
 MatrixDrawPixel(p+4, 0, LED_RED)
 MatrixDrawPixel(p+5, 0, LED_RED)
 MatrixDrawPixel(p, 1, LED_RED)
MatrixDrawPixel(p+2, 1, LED_RED)
MatrixDrawPixel(p+5, 1, LED_RED)
MatrixDrawPixel(p+7, 1, LED_RED)
 MatrixDrawPixel(p, 2, LED_RED)
MatrixDrawPixel(p+2, 2, LED_RED)
MatrixDrawPixel(p+3, 2, LED_RED)
MatrixDrawPixel(p+4, 2, LED_RED)
MatrixDrawPixel(p+5, 2, LED_RED)
MatrixDrawPixel(p+7, 2, LED_RED)
MatrixDrawPixel(p, 3, LED_RED)
MatrixDrawPixel(p+1, 3, LED_RED)
MatrixDrawPixel(p+3, 3, LED_RED)
MatrixDrawPixel(p+4, 3, LED_RED)
MatrixDrawPixel(p+6, 3, LED_RED)
MatrixDrawPixel(p+7, 3, LED_RED)
MatrixDrawPixel(p+2, 4, LED_RED)
MatrixDrawPixel(p+3, 4, LED_RED)
MatrixDrawPixel(p+4, 4, LED_RED)
MatrixDrawPixel(p+5, 4, LED_RED)
MatrixDrawPixel(p+2, 5, LED_RED)
MatrixDrawPixel(p+3, 5, LED_RED)
MatrixDrawPixel(p+4, 5, LED_RED)
MatrixDrawPixel(p+5, 5, LED_RED)
MatrixDrawPixel(p+1, 6, LED_RED)
MatrixDrawPixel(p+6, 6, LED_RED)
MatrixDrawPixel(p+1, 7, LED_RED)
MatrixDrawPixel(p+2, 7, LED_RED)
MatrixDrawPixel(p+5, 7, LED_RED)
MatrixDrawPixel(p+6, 7, LED_RED)
MatrixWriteDisplay()
}

void setup()
{
	for (int i = 0; i < 8; i=i+1)
	{
		PX[i]=random(8)
		PY[i]=-i-1
	}
	X=3
	NSBegin(64,2)
}

void Ready()
{
	Delay(1500)
	for (i = 0; i < 8; i=i+2)
	{
		PX[i]=random(8)
		PY[i]=-i-1
	}
	fail=0
	f=0
	MatrixClear()
	MatrixWriteDisplay()
	Delay(1500)
}

void MovePixel(int a)
{
	if(a==1 && X>0 && X<=7)
	{
		X=X-1
	}
	if (a==2 && X>=0 && X<7)
	{
		X=X+1
	}
	MatrixDrawPixel(X,7,2)
}
void Raining()
{
	for (int j = 0; j < 8 ; j=j+2)
	{
		PY[j]=PY[j]+1
		if(PY[j]>7)
		{
			if(X==PX[j])
			{
				fail=1
			}
			else
			{
				PY[j]=0
				PX[j]=random(8)
			}
		}
		MatrixDrawPixel(PX[j], PY[j], 1)
	}
	if(fail==1)
	{	
		if(d>e)
		 {
		     e=d
         }
		if(e>=d)
		 {
		     e=e
		}
		LcdClear()
	   LcdBackLight()
	   LcdHome()
	   LcdPrint("highscore")
	   LcdPrint("=")
	   LcdPrint(e)
	   LcdSetCursor(0,1)
	   LcdPrint("score")
	   LcdPrint("=")
	   LcdPrint(d)
	   d=0
		Ready()
	}
}

void PlaySound()
{
f=f+1
f=f%14
tone(3,F[f], 80)
Delay(100)
}


void loop()
{
    PlaySound()
	a=KeyPad(0)
	MovePixel(a)
	Raining()
	MatrixWriteDisplay()
	d=d+1
	if(d>600)
	 {
	     RobotUp()
	 }
	Delay(100)
	MatrixClear()
}
